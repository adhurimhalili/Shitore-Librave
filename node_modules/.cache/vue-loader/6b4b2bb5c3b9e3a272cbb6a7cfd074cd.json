{"remainingRequest":"C:\\Users\\DELL\\Desktop\\libraria\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\DELL\\Desktop\\libraria\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\DELL\\Desktop\\libraria\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DELL\\Desktop\\libraria\\src\\components\\Home.vue?vue&type=template&id=8dc7cce2&","dependencies":[{"path":"C:\\Users\\DELL\\Desktop\\libraria\\src\\components\\Home.vue","mtime":1580909212350},{"path":"C:\\Users\\DELL\\Desktop\\libraria\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DELL\\Desktop\\libraria\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\DELL\\Desktop\\libraria\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DELL\\Desktop\\libraria\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}