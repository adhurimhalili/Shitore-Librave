{"remainingRequest":"C:\\Users\\Admin\\Desktop\\Shitore-Librave-Komik\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\Desktop\\Shitore-Librave-Komik\\src\\components\\admin\\Rezervimet.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Admin\\Desktop\\Shitore-Librave-Komik\\src\\components\\admin\\Rezervimet.vue","mtime":1678534585295},{"path":"C:\\Users\\Admin\\Desktop\\Shitore-Librave-Komik\\node_modules\\css-loader\\dist\\cjs.js","mtime":1678534577232},{"path":"C:\\Users\\Admin\\Desktop\\Shitore-Librave-Komik\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1678534584705},{"path":"C:\\Users\\Admin\\Desktop\\Shitore-Librave-Komik\\node_modules\\postcss-loader\\src\\index.js","mtime":1678534581739},{"path":"C:\\Users\\Admin\\Desktop\\Shitore-Librave-Komik\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678534575928},{"path":"C:\\Users\\Admin\\Desktop\\Shitore-Librave-Komik\\node_modules\\vue-loader\\lib\\index.js","mtime":1678534584704}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5kYXJrIC5ibGVyamV0ew0KICBjb2xvcjogd2hpdGU7DQp9DQo="},{"version":3,"sources":["Rezervimet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA","file":"Rezervimet.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n <div v-for=\"admins in adminfields\" v-bind:key=\"admins._id\">\r\n          <div v-if=\"admins.email == user.data.email\">\r\n          <h1 class=\"text-center mt-4 mb-4 blerjet\"> Blerjet </h1>\r\n               <div v-for=\"orders in displayedOrders\" v-bind:key=\"orders._id\">\r\n                 \r\n                 \r\n                   <div class=\"sections card\">\r\n                   \r\n                   <div  v-for=\"(book,index) in bookfields\" v-bind:key=\"index\" >\r\n                   <div v-if=\"orders.prodid == book._id \">\r\n                   <img :src=\"`http://localhost:5000/images/${book.image}`\" class=\"img-fluid quoteauthor float-left p-3\">\r\n                   <div class=\"order\">\r\n                     <h3 class=\"font-weight-bold phone\">{{book.title}}</h3>\r\n                   <h4 class=\"text-muted phone\">Autori: {{book.author}}</h4>\r\n                   <h5 class=\"text-muted phone\">ISBN: {{book.isbn}}</h5>\r\n                    <h5 class=\"phone\">Çmimi: <span class=\"text-danger\">{{book.price}}.00€</span></h5>\r\n                   </div>\r\n                   <div class=\"order4 text-muted\">\r\n                     <h5 class=\"ml-3\">Statusi</h5>\r\n                   \r\n                    <h5 class=\"text-warning ml-2\" v-if=\"orders.status == 0\">Në pritje!</h5>\r\n                  \r\n                   \r\n                    <h5 class=\"text-success ml-2\" v-if=\"orders.status == 1\">Aprovuar!</h5>\r\n                 \r\n                   \r\n                    <h5 v-if=\"orders.status == 2\" class=\"text-danger ml-2\">Refuzuar!</h5>\r\n                     <div v-if=\"orders.status == 0\">\r\n                     <button type=\"button\" class=\"btn btn-warning mb-1\" @click=\"goToconfirm(orders._id)\">Konfirmo</button>\r\n                     </div>\r\n                    <h5 class=\"text-muted phone\">Personi: {{orders.emri}}</h5>\r\n                     <h5 class=\"text-muted phone\">Nr.Telefonit: {{orders.phonenumber}}</h5>\r\n                     <h5 class=\"text-muted phone\">Adresa: {{orders.adresa}}</h5>\r\n                   </div>\r\n                   <div class=\"order2\">\r\n                   <h5> {{orders.dataerezervimit | moment(\"Do MMMM  YYYY, h:mm:ss a\")}}</h5>\r\n                     <div v-for=\"posts in postsfields\" v-bind:key=\"posts._id\">\r\n                \r\n               <h5 class=\"text-center\" v-if=\"orders.posta == posts._id\">Posta: {{posts.emri}}</h5></div>\r\n                   <h5 class=\"text-center text-muted\">Order ID:</h5>\r\n                    <h5 class=\"text-danger\"> {{orders._id}}</h5>\r\n                   </div>\r\n              \r\n          \r\n                  \r\n                           \r\n                   </div></div></div>\r\n\r\n\r\n        </div>\r\n\r\n      <div class=\"clearfix\"></div>\r\n      <div class=\"d-flex justify-content-center\">\r\n  <nav aria-label=\"Page navigation example\">\r\n            <ul class=\"pagination float-right\">\r\n                <li class=\"page-item d-flex\">\r\n                    <button type=\"button\" class=\"page-link\" v-if=\"page != 1\" @click=\"page--\"> Previous </button>\r\n                </li>\r\n                <li class=\"page-item  d-flex\">\r\n                    <button type=\"button\" class=\"page-link\" v-for=\"pageNumber in pages.slice(page-1, page+5)\" :key=\"pageNumber\" @click=\"page = pageNumber\">{{pageNumber}}</button>\r\n                </li>\r\n                <li class=\"page-item  d-flex\">\r\n                    <button type=\"button\" @click=\"page++\" v-if=\"page < pages.length\" class=\"page-link\"> Next </button>\r\n                </li>\r\n            </ul>\r\n        </nav> \r\n      </div>\r\n\r\n          </div>\r\n          </div>\r\n  </div>\r\n</template>\r\n<style>\r\n.dark .blerjet{\r\n  color: white;\r\n}\r\n</style>\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport axios from 'axios';\r\n    export default {\r\n      name: 'ShowReservations',\r\n        data(){\r\n            return{\r\n              bookfields:{},\r\n              postsfields:{},\r\n              orders : [''],\r\n              page: 1,\r\n              perPage: 3,\r\n              pages: [], \r\n              adminfields:{}\r\n              }\r\n        },\r\n        \r\n        created () {\r\n           axios.get(`http://localhost:4000/books`)\r\n    \r\n    .then(response => {\r\n      this.bookfields = response.data\r\n    })\r\n    .catch(e => {\r\n      this.errors.push(e)\r\n    }),\r\n        axios.get(`http://localhost:4000/orders`)\r\n        .then(response => {\r\n          this.orders = response.data.reverse()\r\n        })\r\n        .catch(e => {\r\n          this.errors.push(e)\r\n        }),\r\n        axios.get(`http://localhost:4000/admin`)\r\n        .then(response => {\r\n          this.adminfields = response.data.filter(x => x.email == this.user.data.email)\r\n        })\r\n        .catch(e => {\r\n          this.errors.push(e)\r\n        }),\r\n        axios.get(`http://localhost:4000/posts`)\r\n        .then(response => {\r\n          this.postsfields = response.data\r\n        })\r\n        .catch(e => {\r\n          this.errors.push(e)\r\n        })\r\n      },\r\n       computed: {\r\n    ...mapGetters({\r\n// map `this.user` to `this.$store.getters.user`\r\n      user: \"user\"\r\n    }),\r\n    displayedOrders () {\r\n\t\t\treturn this.paginate(this.orders);\r\n\t\t}\r\n  },\r\n  //<div v-if=\"orders.userid == user.data.id\">\r\n  methods:{\r\n   \r\n    setPages () {\r\n\t\t\tlet numberOfPages = Math.ceil(this.orders.length / this.perPage);\r\n\t\t\tfor (let index = 1; index <= numberOfPages; index++) {\r\n\t\t\t\tthis.pages.push(index);\r\n\t\t\t}\r\n\t\t},\r\n\t\tpaginate (orders) {\r\n\t\t\tlet page = this.page;\r\n\t\t\tlet perPage = this.perPage;\r\n\t\t\tlet from = (page * perPage) - perPage;\r\n\t\t\tlet to = (page * perPage);\r\n\t\t\treturn  orders.slice(from, to);\r\n    },\r\n     goToconfirm(orderId) {\r\n    let ordId=orderId\r\n    \r\n    this.$router.push({name:'confirm',params:{Oid:ordId}}\r\n    \r\n    \r\n    )\r\n      this.$router.go({name:'confirm',params:{Oid:ordId}}) ;\r\n      window.scrollTo(0, 0);\r\n  }, \r\n    \r\n  },\r\n  watch: {\r\n\t\torders () {\r\n\t\t\tthis.setPages();\r\n\t\t}\r\n\t},\r\n  \r\n      \r\n      \r\n  }\r\n\r\n</script>"]}]}