{"remainingRequest":"C:\\Users\\Admin\\Desktop\\libraria\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\Desktop\\libraria\\src\\components\\books\\Bookdetails.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Admin\\Desktop\\libraria\\src\\components\\books\\Bookdetails.vue","mtime":1678534585296},{"path":"C:\\Users\\Admin\\Desktop\\libraria\\node_modules\\css-loader\\dist\\cjs.js","mtime":1678534577232},{"path":"C:\\Users\\Admin\\Desktop\\libraria\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1678534584705},{"path":"C:\\Users\\Admin\\Desktop\\libraria\\node_modules\\postcss-loader\\src\\index.js","mtime":1678534581739},{"path":"C:\\Users\\Admin\\Desktop\\libraria\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678534575928},{"path":"C:\\Users\\Admin\\Desktop\\libraria\\node_modules\\vue-loader\\lib\\index.js","mtime":1678534584704}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmRhcmsgLmJvb2tkZXRhamV0ew0KICBjb2xvcjogd2hpdGUNCn0NCg=="},{"version":3,"sources":["Bookdetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuKA;AACA;AACA","file":"Bookdetails.vue","sourceRoot":"src/components/books","sourcesContent":["<template>\r\n<div>\r\n  <div class=\"container\">\r\n\r\n  <!-- Portfolio Item Heading -->\r\n  \r\n  <div class=\"separator mt-5\">Detajet</div>\r\n\r\n \r\n <div v-for=\"(book,index) in bookfields\" v-bind:key=\"index\" >\r\n            <div class=\"col-md-12 mb-5 \" v-if=\"bokId == book._id\">\r\n       \r\n          <br>\r\n\r\n        <div class=\"row bookdetajet\">\r\n          <div class=\"features\">\r\n         <img :src=\"`http://localhost:5000/images/${book.image}`\" class=\"img-fluid\" style=\"height:480px;\" >\r\n         </div>\r\n         <div class=\"col-md-5 \">\r\n           \r\n              <h2 class=\"pt-4 desc\" style=\"display:inline-block\">Titulli:</h2><h2 style=\"display:inline-block\" class=\"ml-2\">{{book.title}}</h2>\r\n              <span class=\"btn btn-primary float-right mt-4\">{{book.price}}.00€</span>\r\n              <hr>\r\n              \r\n               <div class=\"row detailsbox\">\r\n                  <div class=\"detailsbox1\">\r\n                    <h4 class=\"desc\">Autori:  </h4>           \r\n              </div>\r\n              <div class=\"detailsbox2\">\r\n               <p>{{book.author}}</p></div>\r\n              </div>\r\n              <div class=\"row detailsbox\">\r\n                  <div class=\"detailsbox1\">\r\n                    <h4 class=\"desc\">Viti:  </h4>           \r\n              </div>\r\n              <div class=\"detailsbox2\">\r\n               <p>{{book.year}}</p></div>\r\n              </div>\r\n\r\n               <div class=\"row detailsbox\">\r\n                  <div class=\"detailsbox1\">\r\n                    <h4 class=\"desc\">ISBN:  </h4>           \r\n              </div>\r\n              <div class=\"detailsbox2\">\r\n               <p>{{book.isbn}}</p></div>\r\n              </div>\r\n\r\n               <div class=\"row detailsbox\">\r\n                  <div class=\"detailsbox1\">\r\n                    <h4 class=\"desc\">Kategoria:  </h4>           \r\n              </div>\r\n              <div class=\"detailsbox2\">\r\n              <div v-for=\"categories in categoryfields\" v-bind:key=\"categories._id\">\r\n                \r\n               <p v-if=\"book.category == categories._id\">{{categories.name}}</p></div>\r\n              </div>\r\n              </div>\r\n\r\n              <div class=\"row detailsbox\">\r\n                  <div class=\"detailsbox1\">\r\n                    <h4 class=\"desc\">Përshkrimi:  </h4>           \r\n              </div>\r\n              <div class=\"detailsbox3\">\r\n               <p>{{book.description}}</p></div>\r\n              </div>\r\n              \r\n              <hr>\r\n              <template v-if=\"user.loggedIn\">\r\n                 <form @submit=\"onSubmit\">\r\n            <div class=\"row\">\r\n             \r\n\r\n               <input type=\"text\" class=\"form-control\"  id=\"prodid\" :value=\"book._id\" hidden>             \r\n              <input type=\"text\" class=\"form-control\"  id=\"userid\" :value=\"user.data.id\" hidden>\r\n               <input type=\"text\" class=\"form-control\"  id=\"emri\" :value=\"user.data.displayName\" hidden>\r\n          \r\n            <div class=\"col-md-6\">\r\n                    \r\n            <label for=\"phonenumber\">Nr.Telefonit</label>\r\n            <input type=\"text\" v-model=\"buy.phonenumber\" id=\"phonenumber\" name=\"phonenumber\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && $v.buy.phonenumber.$error }\" />\r\n            <div v-if=\"submitted && !$v.buy.phonenumber.required\" class=\"invalid-feedback\">Kjo fushë është e domosdoshme</div>\r\n              <div v-if=\"submitted && !$v.buy.phonenumber.alpha\" class=\"invalid-feedback\">Kjo fushë pranon vetëm shkronja dhe -</div>\r\n              <div v-if=\"submitted && !$v.buy.phonenumber.minLength || !$v.buy.phonenumber.maxLength\" class=\"invalid-feedback\">Duhet të ketë 2 deri 20 shifra</div>\r\n          \r\n                    \r\n                    </div>\r\n                <div class=\"col-md-6\">\r\n                    \r\n            <label for=\"adresa\">Adresa</label>\r\n            <input type=\"text\" v-model=\"buy.adresa\" id=\"adresa\" name=\"adresa\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && $v.buy.adresa.$error }\" />\r\n            <div v-if=\"submitted && !$v.buy.adresa.required\" class=\"invalid-feedback\">Kjo fushë është e domosdoshme</div>\r\n              <div v-if=\"submitted && !$v.buy.adresa.alphasymbol\" class=\"invalid-feedback\">Mos përdorni karaktere të veçanta</div>\r\n              <div v-if=\"submitted && !$v.buy.adresa.minLength || !$v.buy.adresa.maxLength\" class=\"invalid-feedback\">Duhet të ketë 5 deri 30 shkronja</div>\r\n          \r\n                    \r\n                    </div>\r\n             <div class=\"col-md-6 mb-3 mt-3\">\r\n              <label for=\"posta\">Posta</label>\r\n          <select\r\n                    id=\"posta\"\r\n                    name=\"posta\"\r\n                    class=\"form-control \"\r\n                  >\r\n                    <option v-for=\"item in postsfields\" v-bind:key=\"item._id\" :value=\"item._id\">{{item.emri}} - {{item.koha}}</option>\r\n                  </select>\r\n        </div>\r\n        <div class=\"col-md-6 mt-3\">\r\n                    \r\n            <label for=\"zip\">ZIP</label>\r\n            <input type=\"text\" v-model=\"buy.zip\" id=\"zip\" name=\"zip\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && $v.buy.zip.$error }\" />\r\n            <div v-if=\"submitted && !$v.buy.zip.required\" class=\"invalid-feedback\">Kjo fushë është e domosdoshme</div>\r\n              <div v-if=\"submitted && !$v.buy.zip.numeric\" class=\"invalid-feedback\">Kjo fushë pranon vetëm numra</div>\r\n              <div v-if=\"submitted && !$v.buy.zip.minLength || !$v.buy.zip.maxLength\" class=\"invalid-feedback\">Duhet të ketë 2 deri 15 shifra</div>\r\n          \r\n                    \r\n                    </div>\r\n        </div>\r\n               \r\n            \r\n\r\n            <button class=\"btn btn-success btn-lg btn-block mt-3\" type=\"submit\">Rezervo <i class=\"cil-book\"></i></button>\r\n          </form>\r\n              </template>\r\n          \r\n           \r\n              \r\n              \r\n              \r\n       \r\n        \r\n        \r\n        </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n  \r\n         \r\n\r\n\r\n  <!-- Portfolio Item Row -->\r\n  \r\n  <!-- /.row -->\r\n\r\n  <!-- Related Projects Row -->\r\n  \r\n   <div class=\"separator\">Thënia e ditës</div>\r\n              <div v-for=\"quote in quotes.slice(-1)\" v-bind:key=\"quote._id\" class=\"sections card shadow-lg mt-4 mb-5\">\r\n                   \r\n                   \r\n                    <img :src=\"`http://localhost:5000/images/${quote.image}`\" class=\"img-fluid quoteauthor float-left p-3\">\r\n                   <div class=\"quote float-left\">\r\n                    <h3 id=\"quotes\">{{quote.author}}</h3>\r\n                   </div>\r\n                   <div class=\"quotedesc\">\r\n                     <p>{{quote.description}}</p>\r\n                   </div>\r\n\r\n                   </div>\r\n\r\n\r\n\r\n\r\n</div>\r\n         \r\n</div>\r\n</template>\r\n<style>\r\n.dark .bookdetajet{\r\n  color: white\r\n}\r\n</style>\r\n<script>\r\n/* eslint-disable */\r\nimport { mapGetters } from \"vuex\";\r\nimport axios from 'axios';\r\nimport { required, minLength,maxLength,numeric, helpers} from \"vuelidate/lib/validators\"\r\nconst alpha = helpers.regex('alpha', /^[0-9-]*$/)\r\nconst alphasymbol = helpers.regex('alphasymbol', /^[a-zA-Z0-9  ëçÇË?.,-]*$/)\r\nexport default {\r\n  \r\n    name: 'Get',\r\n   data () {\r\n\r\n    return {\r\n        bokId:this.$route.params.Bid,\r\n        bookfields:{},\r\n        categoryfields:{},\r\n        postsfields:{},\r\n        quotes:{},\r\n       buy: {\r\n                   phonenumber: \"\",\r\n                   adresa:\"\",\r\n                   zip:\"\"\r\n                },\r\n                submitted: false,\r\n\r\n        \r\n     \r\n       }},\r\n        created() {\r\n    axios.get(`http://localhost:4000/books`)\r\n    \r\n    .then(response => {\r\n      this.bookfields = response.data\r\n    })\r\n    .catch(e => {\r\n      this.errors.push(e)\r\n    }),\r\n    axios.get(`http://localhost:4000/category`)\r\n    .then(response => {\r\n      this.categoryfields = response.data\r\n    })\r\n    .catch(e => {\r\n      this.errors.push(e)\r\n    }),\r\n     axios.get(`http://localhost:4000/quotes`)\r\n    .then(response => {\r\n      this.quotes = response.data\r\n    })\r\n    .catch(e => {\r\n      this.errors.push(e)\r\n    }),\r\n    axios.get(`http://localhost:4000/posts`)\r\n    .then(response => {\r\n      this.postsfields = response.data\r\n    })\r\n    .catch(e => {\r\n      this.errors.push(e)\r\n    })\r\n     },\r\n     validations: {\r\n            buy: {\r\n                phonenumber: { required,alpha, minLength: minLength(2), maxLength: maxLength(20)},\r\n               adresa: { required,alphasymbol, minLength: minLength(5), maxLength: maxLength(30)},\r\n                 zip: {required, numeric, minLength: minLength(2), maxLength: maxLength(15)},\r\n            }\r\n        },\r\n      computed: {\r\n    ...mapGetters({\r\n// map `this.user` to `this.$store.getters.user`\r\n      user: \"user\"\r\n    })\r\n  },\r\n  \r\n      methods: {\r\n    goTodetail(bookId) {\r\n    let bokId=bookId\r\n    \r\n    this.$router.push({name:'bookdetails',params:{Bid:bokId}}\r\n    \r\n    \r\n    )\r\n      this.$router.go({name:'bookdetails',params:{Bid:bokId}}) ;\r\n      window.scrollTo(0, 0);\r\n  },\r\n     onSubmit(evt) {\r\n      evt.preventDefault();\r\n\r\n       \r\n             this.submitted = true;\r\n\r\n             this.$v.$touch();\r\n                if (this.$v.$invalid) {\r\n                    return;\r\n                }\r\n      \r\n        \r\n          var bodyFormData = new FormData();\r\n    \r\n          bodyFormData.set(\"prodid\", document.getElementById(\"prodid\").value);\r\n          bodyFormData.set(\"userid\", document.getElementById(\"userid\").value);\r\n          bodyFormData.set(\"adresa\", document.getElementById(\"adresa\").value);\r\n          bodyFormData.set(\"posta\", document.getElementById(\"posta\").value);\r\n          bodyFormData.set(\"zip\", document.getElementById(\"zip\").value);\r\n          bodyFormData.set(\"emri\", document.getElementById(\"emri\").value);\r\n          bodyFormData.set(\"phonenumber\", document.getElementById(\"phonenumber\").value);\r\n          axios.post(`http://localhost:4000/orders`, bodyFormData)\r\n      .then(response => {\r\n        //console.log(response);\r\n        this.$router.push({\r\n          name: 'myorders',\r\n          //params: { id: response.data._id }\r\n        })\r\n        })\r\n        \r\n    }\r\n   \r\n            \r\n            },\r\n            \r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n"]}]}